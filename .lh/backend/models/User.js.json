{
    "sourceFile": "backend/models/User.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1744050140908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744050157685,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,147 +1,65 @@\n-.event-details-container {\n-    min-height: 100vh;\n-    background-color: #f8f9fa;\n-    position: relative;\n-  }\n-  \n-  .event-content {\n-    max-width: 1200px;\n-    margin: 0 auto;\n-    padding: 40px 20px;\n-  }\n-  \n-  .back-button {\n-    position: absolute;\n-    top: 100px;\n-    left: 40px;\n-    padding: 12px 24px;\n-    background-color: #4CAF50;\n-    color: white;\n-    border: none;\n-    border-radius: 8px;\n-    cursor: pointer;\n-    font-size: 1rem;\n-    transition: all 0.2s ease;\n-    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n-  }\n-  \n-  .back-button:hover {\n-    background-color: #45a049;\n-    transform: translateY(-2px);\n-    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n-  }\n-  \n-  .event-title {\n-    color: #2c3e50;\n-    font-size: 3rem;\n-    text-align: center;\n-    margin: 100px 0 50px;\n-    font-weight: 600;\n-    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n-  }\n-  \n-  .event-info {\n-    background: white;\n-    border-radius: 16px;\n-    padding: 40px;\n-    margin-top: 30px;\n-    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n-    display: grid;\n-    grid-template-columns: 1fr 2fr;\n-    gap: 40px;\n-  }\n-  \n-  .info-section {\n-    background: #f1f8ff;\n-    padding: 30px;\n-    border-radius: 12px;\n-    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.05);\n-  }\n-  \n-  .info-section h2,\n-  .destination-section h2 {\n-    color: #1a365d;\n-    font-size: 1.8rem;\n-    margin-bottom: 25px;\n-    font-weight: 600;\n-  }\n-  \n-  .destination-section {\n-    background: #f5fff6;\n-    padding: 30px;\n-    border-radius: 12px;\n-    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.05);\n-  }\n-  \n-  .destination-section h3 {\n-    color: #2c5282;\n-    font-size: 1.4rem;\n-    margin-bottom: 15px;\n-  }\n-  \n-  .info-section p {\n-    font-size: 1.2rem;\n-    color: #4a5568;\n-    margin-bottom: 15px;\n-    line-height: 1.6;\n-  }\n-  \n-  .packing-list {\n-    margin-top: 40px;\n-    background: white;\n-    padding: 25px;\n-    border-radius: 12px;\n-    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n-  }\n-  \n-  .packing-list h3 {\n-    color: #2c5282;\n-    font-size: 1.6rem;\n-    margin-bottom: 20px;\n-    text-align: center;\n-  }\n-  \n-  .packing-item {\n-    display: flex;\n-    align-items: center;\n-    gap: 15px;\n-    margin-bottom: 12px;\n-    padding: 12px;\n-    background: #ffffff;\n-    border-radius: 8px;\n-    transition: all 0.2s ease;\n-  }\n-  \n-  .packing-item:hover {\n-    transform: translateX(5px);\n-    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n-  }\n-  \n-  .packing-item input[type=\"checkbox\"] {\n-    width: 20px;\n-    height: 20px;\n-    accent-color: #4CAF50;\n-  }\n-  \n-  .packing-item label {\n-    font-size: 1.2rem;\n-    color: #2d3748;\n-    cursor: pointer;\n-  }\n-  \n-  .loading-spinner {\n-    text-align: center;\n-    padding: 100px 40px;\n-    font-size: 1.4rem;\n-    color: #2c5282;\n-  }\n-  \n-  .error-message {\n-    text-align: center;\n-    padding: 100px 40px;\n-    color: #e53e3e;\n-    font-size: 1.4rem;\n-    background: #fff5f5;\n-    border-radius: 12px;\n-    margin-top: 100px;\n-  }\n\\ No newline at end of file\n+import React, { useState } from 'react';\n+import Navbar from '../components/Navbar';\n+import './Profile.css';\n+\n+const Profile = () => {\n+  const [user, setUser] = useState({\n+    name: 'John Doe',\n+    email: 'john@example.com',\n+    avatar: 'https://via.placeholder.com/150',\n+    preferences: {\n+      notifications: true,\n+      darkMode: false,\n+      emailUpdates: true\n+    }\n+  });\n+\n+  const [isEditing, setIsEditing] = useState(false);\n+  const [editedUser, setEditedUser] = useState(user);\n+\n+  const handleSave = () => {\n+    setUser(editedUser);\n+    setIsEditing(false);\n+    // TODO: Add API call to update user information\n+  };\n+\n+  return (\n+    <div className=\"profile-container\">\n+      <Navbar />\n+      \n+      <div className=\"profile-content\">\n+        <div className=\"profile-header\">\n+          <div className=\"avatar-section\">\n+            <img src={user.avatar} alt=\"Profile\" className=\"profile-avatar\" />\n+            {isEditing && (\n+              <button className=\"change-avatar-btn\">Change Photo</button>\n+            )}\n+          </div>\n+          \n+          <div className=\"profile-info\">\n+            {isEditing ? (\n+              <input\n+                type=\"text\"\n+                value={editedUser.name}\n+                onChange={(e) => setEditedUser({ ...editedUser, name: e.target.value })}\n+                className=\"edit-name-input\"\n+              />\n+            ) : (\n+              <h1>{user.name}</h1>\n+            )}\n+            <p className=\"email\">{user.email}</p>\n+          </div>\n+        </div>\n+\n+        <div className=\"profile-settings\">\n+          <div className=\"settings-header\">\n+            <h2>Settings</h2>\n+            <button \n+              className={isEditing ? \"save-button\" : \"edit-button\"}\n+              onClick={() => isEditing ? handleSave() : setIsEditing(true)}\n+            >\n+              {isEditing ? 'Save Changes' : 'Edit Profile'}\n+            </button>\n+          </div>\n+\n+          <div className=\"settings-gri\n\\ No newline at end of file\n"
                },
                {
                    "date": 1744050171455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,65 +0,0 @@\n-import React, { useState } from 'react';\n-import Navbar from '../components/Navbar';\n-import './Profile.css';\n-\n-const Profile = () => {\n-  const [user, setUser] = useState({\n-    name: 'John Doe',\n-    email: 'john@example.com',\n-    avatar: 'https://via.placeholder.com/150',\n-    preferences: {\n-      notifications: true,\n-      darkMode: false,\n-      emailUpdates: true\n-    }\n-  });\n-\n-  const [isEditing, setIsEditing] = useState(false);\n-  const [editedUser, setEditedUser] = useState(user);\n-\n-  const handleSave = () => {\n-    setUser(editedUser);\n-    setIsEditing(false);\n-    // TODO: Add API call to update user information\n-  };\n-\n-  return (\n-    <div className=\"profile-container\">\n-      <Navbar />\n-      \n-      <div className=\"profile-content\">\n-        <div className=\"profile-header\">\n-          <div className=\"avatar-section\">\n-            <img src={user.avatar} alt=\"Profile\" className=\"profile-avatar\" />\n-            {isEditing && (\n-              <button className=\"change-avatar-btn\">Change Photo</button>\n-            )}\n-          </div>\n-          \n-          <div className=\"profile-info\">\n-            {isEditing ? (\n-              <input\n-                type=\"text\"\n-                value={editedUser.name}\n-                onChange={(e) => setEditedUser({ ...editedUser, name: e.target.value })}\n-                className=\"edit-name-input\"\n-              />\n-            ) : (\n-              <h1>{user.name}</h1>\n-            )}\n-            <p className=\"email\">{user.email}</p>\n-          </div>\n-        </div>\n-\n-        <div className=\"profile-settings\">\n-          <div className=\"settings-header\">\n-            <h2>Settings</h2>\n-            <button \n-              className={isEditing ? \"save-button\" : \"edit-button\"}\n-              onClick={() => isEditing ? handleSave() : setIsEditing(true)}\n-            >\n-              {isEditing ? 'Save Changes' : 'Edit Profile'}\n-            </button>\n-          </div>\n-\n-          <div className=\"settings-gri\n\\ No newline at end of file\n"
                }
            ],
            "date": 1744050140908,
            "name": "Commit-0",
            "content": ".event-details-container {\n    min-height: 100vh;\n    background-color: #f8f9fa;\n    position: relative;\n  }\n  \n  .event-content {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n  \n  .back-button {\n    position: absolute;\n    top: 100px;\n    left: 40px;\n    padding: 12px 24px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 8px;\n    cursor: pointer;\n    font-size: 1rem;\n    transition: all 0.2s ease;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n  \n  .back-button:hover {\n    background-color: #45a049;\n    transform: translateY(-2px);\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n  }\n  \n  .event-title {\n    color: #2c3e50;\n    font-size: 3rem;\n    text-align: center;\n    margin: 100px 0 50px;\n    font-weight: 600;\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n  \n  .event-info {\n    background: white;\n    border-radius: 16px;\n    padding: 40px;\n    margin-top: 30px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    gap: 40px;\n  }\n  \n  .info-section {\n    background: #f1f8ff;\n    padding: 30px;\n    border-radius: 12px;\n    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.05);\n  }\n  \n  .info-section h2,\n  .destination-section h2 {\n    color: #1a365d;\n    font-size: 1.8rem;\n    margin-bottom: 25px;\n    font-weight: 600;\n  }\n  \n  .destination-section {\n    background: #f5fff6;\n    padding: 30px;\n    border-radius: 12px;\n    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.05);\n  }\n  \n  .destination-section h3 {\n    color: #2c5282;\n    font-size: 1.4rem;\n    margin-bottom: 15px;\n  }\n  \n  .info-section p {\n    font-size: 1.2rem;\n    color: #4a5568;\n    margin-bottom: 15px;\n    line-height: 1.6;\n  }\n  \n  .packing-list {\n    margin-top: 40px;\n    background: white;\n    padding: 25px;\n    border-radius: 12px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  }\n  \n  .packing-list h3 {\n    color: #2c5282;\n    font-size: 1.6rem;\n    margin-bottom: 20px;\n    text-align: center;\n  }\n  \n  .packing-item {\n    display: flex;\n    align-items: center;\n    gap: 15px;\n    margin-bottom: 12px;\n    padding: 12px;\n    background: #ffffff;\n    border-radius: 8px;\n    transition: all 0.2s ease;\n  }\n  \n  .packing-item:hover {\n    transform: translateX(5px);\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  }\n  \n  .packing-item input[type=\"checkbox\"] {\n    width: 20px;\n    height: 20px;\n    accent-color: #4CAF50;\n  }\n  \n  .packing-item label {\n    font-size: 1.2rem;\n    color: #2d3748;\n    cursor: pointer;\n  }\n  \n  .loading-spinner {\n    text-align: center;\n    padding: 100px 40px;\n    font-size: 1.4rem;\n    color: #2c5282;\n  }\n  \n  .error-message {\n    text-align: center;\n    padding: 100px 40px;\n    color: #e53e3e;\n    font-size: 1.4rem;\n    background: #fff5f5;\n    border-radius: 12px;\n    margin-top: 100px;\n  }"
        }
    ]
}