{
    "sourceFile": "backend/server.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1743775843857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1743776153725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+const express = require('express');\n+const mongoose = require('mongoose');\n+const cors = require('cors');\n+const destinationsRouter = require('./routes/destinations');\n+\n+const app = express();\n+const port = 5000;\n+\n+// Use CORS middleware to allow requests from React frontend (localhost:3000)\n+app.use(cors());\n+\n+// Use JSON middleware to parse incoming requests\n+app.use(express.json());\n+\n+// Connect to MongoDB\n+mongoose.connect('mongodb://localhost:27017/destinationsdb', {\n+  useNewUrlParser: true,\n+  useUnifiedTopology: true,\n+})\n+  .then(() => console.log('MongoDB connected'))\n+  .catch((err) => console.log('MongoDB connection error:', err));\n+\n+// Use the destinations routes\n+app.use('/api/destinations', destinationsRouter);\n+\n+// Start the server\n+app.listen(port, () => {\n+  console.log(`Server running on port ${port}`);\n+});\n"
                },
                {
                    "date": 1743776549723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,14 @@\n const app = express();\n const port = 5000;\n \n // Use CORS middleware to allow requests from React frontend (localhost:3000)\n-app.use(cors());\n+app.use(cors({\n+    origin: 'http://localhost:3000',\n+    methods: ['GET', 'POST', 'PUT', 'DELETE'],\n+    allowedHeaders: ['Content-Type']\n+  }));\n+  \n \n // Use JSON middleware to parse incoming requests\n app.use(express.json());\n \n@@ -26,61 +31,4 @@\n // Start the server\n app.listen(port, () => {\n   console.log(`Server running on port ${port}`);\n });\n-const express = require('express');\n-const mongoose = require('mongoose');\n-const cors = require('cors');\n-const app = express();\n-const port = 5000; // or any port you prefer\n-\n-// Middleware\n-app.use(express.json());\n-app.use(cors());\n-\n-// Connect to MongoDB (Replace with your MongoDB URI)\n-mongoose.connect('mongodb://localhost:27017/destinationsdb', {\n-  useNewUrlParser: true,\n-  useUnifiedTopology: true,\n-})\n-  .then(() => console.log('MongoDB connected'))\n-  .catch((err) => console.error(err));\n-\n-// Define a Destination Schema\n-const destinationSchema = new mongoose.Schema({\n-  name: String,\n-  details: String,\n-});\n-\n-const Destination = mongoose.model('Destination', destinationSchema);\n-\n-// API Routes\n-// Get all destinations\n-app.get('/api/destinations', async (req, res) => {\n-  try {\n-    const destinations = await Destination.find();\n-    res.json(destinations);\n-  } catch (err) {\n-    res.status(500).json({ message: err.message });\n-  }\n-});\n-\n-// Add a new destination\n-app.post('/api/destinations', async (req, res) => {\n-  const { name, details } = req.body;\n-  const destination = new Destination({\n-    name,\n-    details,\n-  });\n-\n-  try {\n-    await destination.save();\n-    res.status(201).json(destination);\n-  } catch (err) {\n-    res.status(400).json({ message: err.message });\n-  }\n-});\n-\n-// Start server\n-app.listen(port, () => {\n-  console.log(`Server is running on port ${port}`);\n-});\n"
                },
                {
                    "date": 1743776852205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,14 +7,14 @@\n const port = 5000;\n \n // Use CORS middleware to allow requests from React frontend (localhost:3000)\n app.use(cors({\n-    origin: 'http://localhost:3000',\n-    methods: ['GET', 'POST', 'PUT', 'DELETE'],\n-    allowedHeaders: ['Content-Type']\n-  }));\n-  \n+  origin: 'http://localhost:3000',\n+  methods: ['GET', 'POST', 'PUT', 'DELETE'],\n+  allowedHeaders: ['Content-Type']\n+}));\n \n+\n // Use JSON middleware to parse incoming requests\n app.use(express.json());\n \n // Connect to MongoDB\n"
                },
                {
                    "date": 1743967497892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,18 +3,13 @@\n const cors = require('cors');\n const destinationsRouter = require('./routes/destinations');\n \n const app = express();\n-const port = 5000;\n+const port = 6000;\n \n-// Use CORS middleware to allow requests from React frontend (localhost:3000)\n-app.use(cors({\n-  origin: 'http://localhost:3000',\n-  methods: ['GET', 'POST', 'PUT', 'DELETE'],\n-  allowedHeaders: ['Content-Type']\n-}));\n+// Apply CORS middleware first, before any routes\n+app.use(cors());  // This simpler configuration should work for development\n \n-\n // Use JSON middleware to parse incoming requests\n app.use(express.json());\n \n // Connect to MongoDB\n@@ -30,5 +25,5 @@\n \n // Start the server\n app.listen(port, () => {\n   console.log(`Server running on port ${port}`);\n-});\n+});\n\\ No newline at end of file\n"
                }
            ],
            "date": 1743775843857,
            "name": "Commit-0",
            "content": "const express = require('express');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\nconst app = express();\nconst port = 5000; // or any port you prefer\n\n// Middleware\napp.use(express.json());\napp.use(cors());\n\n// Connect to MongoDB (Replace with your MongoDB URI)\nmongoose.connect('mongodb://localhost:27017/destinationsdb', {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n})\n  .then(() => console.log('MongoDB connected'))\n  .catch((err) => console.error(err));\n\n// Define a Destination Schema\nconst destinationSchema = new mongoose.Schema({\n  name: String,\n  details: String,\n});\n\nconst Destination = mongoose.model('Destination', destinationSchema);\n\n// API Routes\n// Get all destinations\napp.get('/api/destinations', async (req, res) => {\n  try {\n    const destinations = await Destination.find();\n    res.json(destinations);\n  } catch (err) {\n    res.status(500).json({ message: err.message });\n  }\n});\n\n// Add a new destination\napp.post('/api/destinations', async (req, res) => {\n  const { name, details } = req.body;\n  const destination = new Destination({\n    name,\n    details,\n  });\n\n  try {\n    await destination.save();\n    res.status(201).json(destination);\n  } catch (err) {\n    res.status(400).json({ message: err.message });\n  }\n});\n\n// Start server\napp.listen(port, () => {\n  console.log(`Server is running on port ${port}`);\n});\n"
        }
    ]
}