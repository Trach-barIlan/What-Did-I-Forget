{
    "sourceFile": "frontend/src/pages/DestinationDetails.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1744011253124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744011277688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,119 +1,46 @@\n-import React, { useState } from 'react';\n+import React from 'react';\n import { useLocation, useNavigate } from 'react-router-dom';\n-import axios from 'axios';\n import './DestinationDetails.css';\n \n const DestinationDetails = () => {\n   const location = useLocation();\n   const navigate = useNavigate();\n-  const [destination, setDestination] = useState(location.state);\n-  const [isEditingDetails, setIsEditingDetails] = useState(false);\n-  const [isEditingItems, setIsEditingItems] = useState(false);\n-  const [editedDetails, setEditedDetails] = useState(destination.details);\n-  const [editedItems, setEditedItems] = useState(destination.items.join(', '));\n+  const destination = location.state;\n \n   if (!destination) {\n     return <h2>Error: No destination found</h2>;\n   }\n \n-  const handleSaveDetails = async () => {\n-    try {\n-      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n-        ...destination,\n-        details: editedDetails\n-      });\n-      setDestination(response.data);\n-      setIsEditingDetails(false);\n-    } catch (error) {\n-      console.error('Error updating details:', error);\n-    }\n-  };\n-\n-  const handleSaveItems = async () => {\n-    try {\n-      const itemsArray = editedItems.split(',').map(item => item.trim());\n-      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n-        ...destination,\n-        items: itemsArray\n-      });\n-      setDestination(response.data);\n-      setIsEditingItems(false);\n-    } catch (error) {\n-      console.error('Error updating items:', error);\n-    }\n-  };\n-\n   return (\n     <div className=\"details-container\">\n       <button onClick={() => navigate(-1)} className=\"back-button\">Back</button>\n       \n       <div className=\"details-content\">\n         <h1 className=\"destination-title\">{destination.name}</h1>\n         <div className=\"destination-card\">\n           <div className=\"description-section\">\n-            <div className=\"section-header\">\n-              <h2>About this destination</h2>\n-              <button \n-                className=\"edit-button\"\n-                onClick={() => setIsEditingDetails(!isEditingDetails)}\n-              >\n-                {isEditingDetails ? 'Cancel' : 'Edit'}\n-              </button>\n-            </div>\n-            {isEditingDetails ? (\n-              <div className=\"edit-section\">\n-                <textarea\n-                  value={editedDetails}\n-                  onChange={(e) => setEditedDetails(e.target.value)}\n-                  rows=\"4\"\n-                />\n-                <button onClick={handleSaveDetails} className=\"save-button\">\n-                  Save Changes\n-                </button>\n-              </div>\n-            ) : (\n-              <p>{destination.details}</p>\n-            )}\n+            <h2>About this destination</h2>\n+            <p>{destination.details}</p>\n           </div>\n           \n           <div className=\"items-section\">\n-            <div className=\"section-header\">\n-              <h2>Don't Forget These Items!</h2>\n-              <button \n-                className=\"edit-button\"\n-                onClick={() => setIsEditingItems(!isEditingItems)}\n-              >\n-                {isEditingItems ? 'Cancel' : 'Edit'}\n-              </button>\n+            <h2>Don't Forget These Items!</h2>\n+            <div className=\"items-grid\">\n+              {destination.items.map((item, index) => (\n+                <div key={index} className=\"item-card\">\n+                  <span className=\"item-text\">{item}</span>\n+                  <div className=\"checkbox\">\n+                    <input type=\"checkbox\" id={`item-${index}`} />\n+                    <label htmlFor={`item-${index}`}></label>\n+                  </div>\n+                </div>\n+              ))}\n             </div>\n-            {isEditingItems ? (\n-              <div className=\"edit-section\">\n-                <textarea\n-                  value={editedItems}\n-                  onChange={(e) => setEditedItems(e.target.value)}\n-                  placeholder=\"Item 1, Item 2, Item 3\"\n-                  rows=\"4\"\n-                />\n-                <button onClick={handleSaveItems} className=\"save-button\">\n-                  Save Changes\n-                </button>\n-              </div>\n-            ) : (\n-              <div className=\"items-grid\">\n-                {destination.items.map((item, index) => (\n-                  <div key={index} className=\"item-card\">\n\\ No newline at end of file\n-                    <span className=\"item-text\">{item}</span>\n-                    <div className=\"checkbox\">\n-                      <input type=\"checkbox\" id={`item-${index}`} />\n-                      <label htmlFor={`item-${index}`}></label>\n-                    </div>\n-                  </div>\n-                ))}\n-              </div>\n-            )}\n           </div>\n         </div>\n       </div>\n     </div>\n   );\n-};\n+};\n+\n+export default DestinationDetails;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1744011284719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,42 +1,117 @@\n-import React from 'react';\n+import React, { useState } from 'react';\n import { useLocation, useNavigate } from 'react-router-dom';\n+import axios from 'axios';\n import './DestinationDetails.css';\n \n const DestinationDetails = () => {\n   const location = useLocation();\n   const navigate = useNavigate();\n-  const destination = location.state;\n+  const [destination, setDestination] = useState(location.state);\n+  const [isEditingDetails, setIsEditingDetails] = useState(false);\n+  const [isEditingItems, setIsEditingItems] = useState(false);\n+  const [editedDetails, setEditedDetails] = useState(destination.details);\n+  const [editedItems, setEditedItems] = useState(destination.items.join(', '));\n \n   if (!destination) {\n     return <h2>Error: No destination found</h2>;\n   }\n \n+  const handleSaveDetails = async () => {\n+    try {\n+      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n+        ...destination,\n+        details: editedDetails\n+      });\n+      setDestination(response.data);\n+      setIsEditingDetails(false);\n+    } catch (error) {\n+      console.error('Error updating details:', error);\n+    }\n+  };\n+\n+  const handleSaveItems = async () => {\n+    try {\n+      const itemsArray = editedItems.split(',').map(item => item.trim());\n+      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n+        ...destination,\n+        items: itemsArray\n+      });\n+      setDestination(response.data);\n+      setIsEditingItems(false);\n+    } catch (error) {\n+      console.error('Error updating items:', error);\n+    }\n+  };\n+\n   return (\n     <div className=\"details-container\">\n       <button onClick={() => navigate(-1)} className=\"back-button\">Back</button>\n       \n       <div className=\"details-content\">\n         <h1 className=\"destination-title\">{destination.name}</h1>\n         <div className=\"destination-card\">\n           <div className=\"description-section\">\n-            <h2>About this destination</h2>\n-            <p>{destination.details}</p>\n+            <div className=\"section-header\">\n+              <h2>About this destination</h2>\n+              <button \n+                className=\"edit-button\"\n+                onClick={() => setIsEditingDetails(!isEditingDetails)}\n+              >\n+                {isEditingDetails ? 'Cancel' : 'Edit'}\n+              </button>\n+            </div>\n+            {isEditingDetails ? (\n+              <div className=\"edit-section\">\n+                <textarea\n+                  value={editedDetails}\n+                  onChange={(e) => setEditedDetails(e.target.value)}\n+                  rows=\"4\"\n+                />\n+                <button onClick={handleSaveDetails} className=\"save-button\">\n+                  Save Changes\n+                </button>\n+              </div>\n+            ) : (\n+              <p>{destination.details}</p>\n+            )}\n           </div>\n           \n           <div className=\"items-section\">\n-            <h2>Don't Forget These Items!</h2>\n-            <div className=\"items-grid\">\n-              {destination.items.map((item, index) => (\n-                <div key={index} className=\"item-card\">\n-                  <span className=\"item-text\">{item}</span>\n-                  <div className=\"checkbox\">\n-                    <input type=\"checkbox\" id={`item-${index}`} />\n-                    <label htmlFor={`item-${index}`}></label>\n+            <div className=\"section-header\">\n+              <h2>Don't Forget These Items!</h2>\n+              <button \n+                className=\"edit-button\"\n+                onClick={() => setIsEditingItems(!isEditingItems)}\n+              >\n+                {isEditingItems ? 'Cancel' : 'Edit'}\n+              </button>\n+            </div>\n+            {isEditingItems ? (\n+              <div className=\"edit-section\">\n+                <textarea\n+                  value={editedItems}\n+                  onChange={(e) => setEditedItems(e.target.value)}\n+                  placeholder=\"Item 1, Item 2, Item 3\"\n+                  rows=\"4\"\n+                />\n+                <button onClick={handleSaveItems} className=\"save-button\">\n+                  Save Changes\n+                </button>\n+              </div>\n+            ) : (\n+              <div className=\"items-grid\">\n+                {destination.items.map((item, index) => (\n+                  <div key={index} className=\"item-card\">\n+                    <span className=\"item-text\">{item}</span>\n+                    <div className=\"checkbox\">\n+                      <input type=\"checkbox\" id={`item-${index}`} />\n+                      <label htmlFor={`item-${index}`}></label>\n+                    </div>\n                   </div>\n-                </div>\n-              ))}\n-            </div>\n+                ))}\n+              </div>\n+            )}\n           </div>\n         </div>\n       </div>\n     </div>\n"
                },
                {
                    "date": 1744012381774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n   const [isEditingDetails, setIsEditingDetails] = useState(false);\n   const [isEditingItems, setIsEditingItems] = useState(false);\n   const [editedDetails, setEditedDetails] = useState(destination.details);\n   const [editedItems, setEditedItems] = useState(destination.items.join(', '));\n+  \n \n   if (!destination) {\n     return <h2>Error: No destination found</h2>;\n   }\n"
                },
                {
                    "date": 1744012397642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,124 @@\n+import React, { useState } from 'react';\n+import { useLocation, useNavigate } from 'react-router-dom';\n+import axios from 'axios';\n+import './DestinationDetails.css';\n+\n+const DestinationDetails = () => {\n+  const location = useLocation();\n+  const navigate = useNavigate();\n+  const [destination, setDestination] = useState(location.state);\n+  const [isEditingDetails, setIsEditingDetails] = useState(false);\n+  const [isEditingItems, setIsEditingItems] = useState(false);\n+  const [editedDetails, setEditedDetails] = useState(destination.details);\n+  const [editedItems, setEditedItems] = useState(destination.items.join(', '));\n+  const [isEditingName, setIsEditingName] = useState(false);\n+  const [editedName, setEditedName] = useState(destination.name);\n+\n+  if (!destination) {\n+    return <h2>Error: No destination found</h2>;\n+  }\n+\n+  const handleSaveDetails = async () => {\n+    try {\n+      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n+        ...destination,\n+        details: editedDetails\n+      });\n+      setDestination(response.data);\n+      setIsEditingDetails(false);\n+    } catch (error) {\n+      console.error('Error updating details:', error);\n+    }\n+  };\n+\n+  const handleSaveItems = async () => {\n+    try {\n+      const itemsArray = editedItems.split(',').map(item => item.trim());\n+      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n+        ...destination,\n+        items: itemsArray\n+      });\n+      setDestination(response.data);\n+      setIsEditingItems(false);\n+    } catch (error) {\n+      console.error('Error updating items:', error);\n+    }\n+  };\n+  \n+\n+  return (\n+    <div className=\"details-container\">\n+      <button onClick={() => navigate(-1)} className=\"back-button\">Back</button>\n+      \n+      <div className=\"details-content\">\n+        <h1 className=\"destination-title\">{destination.name}</h1>\n+        <div className=\"destination-card\">\n+          <div className=\"description-section\">\n+            <div className=\"section-header\">\n+              <h2>About this destination</h2>\n+              <button \n+                className=\"edit-button\"\n+                onClick={() => setIsEditingDetails(!isEditingDetails)}\n+              >\n+                {isEditingDetails ? 'Cancel' : 'Edit'}\n+              </button>\n+            </div>\n+            {isEditingDetails ? (\n+              <div className=\"edit-section\">\n+                <textarea\n+                  value={editedDetails}\n+                  onChange={(e) => setEditedDetails(e.target.value)}\n+                  rows=\"4\"\n+                />\n+                <button onClick={handleSaveDetails} className=\"save-button\">\n+                  Save Changes\n+                </button>\n+              </div>\n+            ) : (\n+              <p>{destination.details}</p>\n+            )}\n+          </div>\n+          \n+          <div className=\"items-section\">\n+            <div className=\"section-header\">\n+              <h2>Don't Forget These Items!</h2>\n+              <button \n+                className=\"edit-button\"\n+                onClick={() => setIsEditingItems(!isEditingItems)}\n+              >\n+                {isEditingItems ? 'Cancel' : 'Edit'}\n+              </button>\n+            </div>\n+            {isEditingItems ? (\n+              <div className=\"edit-section\">\n+                <textarea\n+                  value={editedItems}\n+                  onChange={(e) => setEditedItems(e.target.value)}\n+                  placeholder=\"Item 1, Item 2, Item 3\"\n+                  rows=\"4\"\n+                />\n+                <button onClick={handleSaveItems} className=\"save-button\">\n+                  Save Changes\n+                </button>\n+              </div>\n+            ) : (\n+              <div className=\"items-grid\">\n+                {destination.items.map((item, index) => (\n+                  <div key={index} className=\"item-card\">\n+                    <span className=\"item-text\">{item}</span>\n+                    <div className=\"checkbox\">\n+                      <input type=\"checkbox\" id={`item-${index}`} />\n+                      <label htmlFor={`item-${index}`}></label>\n+                    </div>\n+                  </div>\n+                ))}\n+              </div>\n+            )}\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+};\n+\n+export default DestinationDetails;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1744012468653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,137 @@\n+import React, { useState } from 'react';\n+import { useLocation, useNavigate } from 'react-router-dom';\n+import axios from 'axios';\n+import './DestinationDetails.css';\n+\n+const DestinationDetails = () => {\n+  const location = useLocation();\n+  const navigate = useNavigate();\n+  const [destination, setDestination] = useState(location.state);\n+  const [isEditingDetails, setIsEditingDetails] = useState(false);\n+  const [isEditingItems, setIsEditingItems] = useState(false);\n+  const [editedDetails, setEditedDetails] = useState(destination.details);\n+  const [editedItems, setEditedItems] = useState(destination.items.join(', '));\n+  const [isEditingName, setIsEditingName] = useState(false);\n+  const [editedName, setEditedName] = useState(destination.name);\n+\n+  if (!destination) {\n+    return <h2>Error: No destination found</h2>;\n+  }\n+\n+  const handleSaveDetails = async () => {\n+    try {\n+      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n+        ...destination,\n+        details: editedDetails\n+      });\n+      setDestination(response.data);\n+      setIsEditingDetails(false);\n+    } catch (error) {\n+      console.error('Error updating details:', error);\n+    }\n+  };\n+\n+  const handleSaveItems = async () => {\n+    try {\n+      const itemsArray = editedItems.split(',').map(item => item.trim());\n+      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n+        ...destination,\n+        items: itemsArray\n+      });\n+      setDestination(response.data);\n+      setIsEditingItems(false);\n+    } catch (error) {\n+      console.error('Error updating items:', error);\n+    }\n+  };\n+\n+  const handleSaveName = async () => {\n+    try {\n+      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n+        ...destination,\n+        name: editedName\n+      });\n+      setDestination(response.data);\n+      setIsEditingName(false);\n+    } catch (error) {\n+      console.error('Error updating name:', error);\n+    }\n+  };\n+\n+  return (\n+    <div className=\"details-container\">\n+      <button onClick={() => navigate(-1)} className=\"back-button\">Back</button>\n+      \n+      <div className=\"details-content\">\n+        \n+        <h1 className=\"destination-title\">{destination.name}</h1>\n+        <div className=\"destination-card\">\n+          <div className=\"description-section\">\n+            <div className=\"section-header\">\n+              <h2>About this destination</h2>\n+              <button \n+                className=\"edit-button\"\n+                onClick={() => setIsEditingDetails(!isEditingDetails)}\n+              >\n+                {isEditingDetails ? 'Cancel' : 'Edit'}\n+              </button>\n+            </div>\n+            {isEditingDetails ? (\n+              <div className=\"edit-section\">\n+                <textarea\n+                  value={editedDetails}\n+                  onChange={(e) => setEditedDetails(e.target.value)}\n+                  rows=\"4\"\n+                />\n+                <button onClick={handleSaveDetails} className=\"save-button\">\n+                  Save Changes\n+                </button>\n+              </div>\n+            ) : (\n+              <p>{destination.details}</p>\n+            )}\n+          </div>\n+          \n+          <div className=\"items-section\">\n+            <div className=\"section-header\">\n+              <h2>Don't Forget These Items!</h2>\n+              <button \n+                className=\"edit-button\"\n+                onClick={() => setIsEditingItems(!isEditingItems)}\n+              >\n+                {isEditingItems ? 'Cancel' : 'Edit'}\n+              </button>\n+            </div>\n+            {isEditingItems ? (\n+              <div className=\"edit-section\">\n+                <textarea\n+                  value={editedItems}\n+                  onChange={(e) => setEditedItems(e.target.value)}\n+                  placeholder=\"Item 1, Item 2, Item 3\"\n+                  rows=\"4\"\n+                />\n+                <button onClick={handleSaveItems} className=\"save-button\">\n+                  Save Changes\n+                </button>\n+              </div>\n+            ) : (\n+              <div className=\"items-grid\">\n+                {destination.items.map((item, index) => (\n+                  <div key={index} className=\"item-card\">\n+                    <span className=\"item-text\">{item}</span>\n+                    <div className=\"checkbox\">\n+                      <input type=\"checkbox\" id={`item-${index}`} />\n+                      <label htmlFor={`item-${index}`}></label>\n+                    </div>\n+                  </div>\n+                ))}\n+              </div>\n+            )}\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+};\n+\n+export default DestinationDetails;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1744012476991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,167 @@\n+import React, { useState } from 'react';\n+import { useLocation, useNavigate } from 'react-router-dom';\n+import axios from 'axios';\n+import './DestinationDetails.css';\n+\n+const DestinationDetails = () => {\n+  const location = useLocation();\n+  const navigate = useNavigate();\n+  const [destination, setDestination] = useState(location.state);\n+  const [isEditingDetails, setIsEditingDetails] = useState(false);\n+  const [isEditingItems, setIsEditingItems] = useState(false);\n+  const [editedDetails, setEditedDetails] = useState(destination.details);\n+  const [editedItems, setEditedItems] = useState(destination.items.join(', '));\n+  const [isEditingName, setIsEditingName] = useState(false);\n+  const [editedName, setEditedName] = useState(destination.name);\n+\n+  if (!destination) {\n+    return <h2>Error: No destination found</h2>;\n+  }\n+\n+  const handleSaveDetails = async () => {\n+    try {\n+      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n+        ...destination,\n+        details: editedDetails\n+      });\n+      setDestination(response.data);\n+      setIsEditingDetails(false);\n+    } catch (error) {\n+      console.error('Error updating details:', error);\n+    }\n+  };\n+\n+  const handleSaveItems = async () => {\n+    try {\n+      const itemsArray = editedItems.split(',').map(item => item.trim());\n+      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n+        ...destination,\n+        items: itemsArray\n+      });\n+      setDestination(response.data);\n+      setIsEditingItems(false);\n+    } catch (error) {\n+      console.error('Error updating items:', error);\n+    }\n+  };\n+\n+  const handleSaveName = async () => {\n+    try {\n+      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n+        ...destination,\n+        name: editedName\n+      });\n+      setDestination(response.data);\n+      setIsEditingName(false);\n+    } catch (error) {\n+      console.error('Error updating name:', error);\n+    }\n+  };\n+\n+  return (\n+    <div className=\"details-container\">\n+      <button onClick={() => navigate(-1)} className=\"back-button\">Back</button>\n+      \n+      <div className=\"details-content\">\n+        <div className=\"title-section\">\n+          {isEditingName ? (\n+            <div className=\"edit-section\">\n+              <input\n+                type=\"text\"\n+                value={editedName}\n+                onChange={(e) => setEditedName(e.target.value)}\n+                className=\"name-input\"\n+              />\n+              <button onClick={handleSaveName} className=\"save-button\">\n+                Save Name\n+              </button>\n+              <button \n+                onClick={() => setIsEditingName(false)} \n+                className=\"cancel-button\"\n+              >\n+                Cancel\n+              </button>\n+            </div>\n+          ) : (\n+            <div className=\"title-header\">\n+              <h1 className=\"destination-title\">{destination.name}</h1>\n+              <button \n+                className=\"edit-button\"\n+                onClick={() => setIsEditingName(true)}\n+              >\n+                Edit\n+              </button>\n+            </div>\n+          )}\n+        </div>\n+        <h1 className=\"destination-title\">{destination.name}</h1>\n+        <div className=\"destination-card\">\n+          <div className=\"description-section\">\n+            <div className=\"section-header\">\n+              <h2>About this destination</h2>\n+              <button \n+                className=\"edit-button\"\n+                onClick={() => setIsEditingDetails(!isEditingDetails)}\n+              >\n+                {isEditingDetails ? 'Cancel' : 'Edit'}\n+              </button>\n+            </div>\n+            {isEditingDetails ? (\n+              <div className=\"edit-section\">\n+                <textarea\n+                  value={editedDetails}\n+                  onChange={(e) => setEditedDetails(e.target.value)}\n+                  rows=\"4\"\n+                />\n+                <button onClick={handleSaveDetails} className=\"save-button\">\n+                  Save Changes\n+                </button>\n+              </div>\n+            ) : (\n+              <p>{destination.details}</p>\n+            )}\n+          </div>\n+          \n+          <div className=\"items-section\">\n+            <div className=\"section-header\">\n+              <h2>Don't Forget These Items!</h2>\n+              <button \n+                className=\"edit-button\"\n+                onClick={() => setIsEditingItems(!isEditingItems)}\n+              >\n+                {isEditingItems ? 'Cancel' : 'Edit'}\n+              </button>\n+            </div>\n+            {isEditingItems ? (\n+              <div className=\"edit-section\">\n+                <textarea\n+                  value={editedItems}\n+                  onChange={(e) => setEditedItems(e.target.value)}\n+                  placeholder=\"Item 1, Item 2, Item 3\"\n+                  rows=\"4\"\n+                />\n+                <button onClick={handleSaveItems} className=\"save-button\">\n+                  Save Changes\n+                </button>\n+              </div>\n+            ) : (\n+              <div className=\"items-grid\">\n+                {destination.items.map((item, index) => (\n+                  <div key={index} className=\"item-card\">\n+                    <span className=\"item-text\">{item}</span>\n+                    <div className=\"checkbox\">\n+                      <input type=\"checkbox\" id={`item-${index}`} />\n+                      <label htmlFor={`item-${index}`}></label>\n+                    </div>\n+                  </div>\n+                ))}\n+              </div>\n+            )}\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+};\n+\n+export default DestinationDetails;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1744012503852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,166 @@\n+import React, { useState } from 'react';\n+import { useLocation, useNavigate } from 'react-router-dom';\n+import axios from 'axios';\n+import './DestinationDetails.css';\n+\n+const DestinationDetails = () => {\n+  const location = useLocation();\n+  const navigate = useNavigate();\n+  const [destination, setDestination] = useState(location.state);\n+  const [isEditingDetails, setIsEditingDetails] = useState(false);\n+  const [isEditingItems, setIsEditingItems] = useState(false);\n+  const [editedDetails, setEditedDetails] = useState(destination.details);\n+  const [editedItems, setEditedItems] = useState(destination.items.join(', '));\n+  const [isEditingName, setIsEditingName] = useState(false);\n+  const [editedName, setEditedName] = useState(destination.name);\n+\n+  if (!destination) {\n+    return <h2>Error: No destination found</h2>;\n+  }\n+\n+  const handleSaveDetails = async () => {\n+    try {\n+      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n+        ...destination,\n+        details: editedDetails\n+      });\n+      setDestination(response.data);\n+      setIsEditingDetails(false);\n+    } catch (error) {\n+      console.error('Error updating details:', error);\n+    }\n+  };\n+\n+  const handleSaveItems = async () => {\n+    try {\n+      const itemsArray = editedItems.split(',').map(item => item.trim());\n+      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n+        ...destination,\n+        items: itemsArray\n+      });\n+      setDestination(response.data);\n+      setIsEditingItems(false);\n+    } catch (error) {\n+      console.error('Error updating items:', error);\n+    }\n+  };\n+\n+  const handleSaveName = async () => {\n+    try {\n+      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n+        ...destination,\n+        name: editedName\n+      });\n+      setDestination(response.data);\n+      setIsEditingName(false);\n+    } catch (error) {\n+      console.error('Error updating name:', error);\n+    }\n+  };\n+\n+  return (\n+    <div className=\"details-container\">\n+      <button onClick={() => navigate(-1)} className=\"back-button\">Back</button>\n+      \n+      <div className=\"details-content\">\n+        <div className=\"title-section\">\n+          {isEditingName ? (\n+            <div className=\"edit-section\">\n+              <input\n+                type=\"text\"\n+                value={editedName}\n+                onChange={(e) => setEditedName(e.target.value)}\n+                className=\"name-input\"\n+              />\n+              <button onClick={handleSaveName} className=\"save-button\">\n+                Save Name\n+              </button>\n+              <button \n+                onClick={() => setIsEditingName(false)} \n+                className=\"cancel-button\"\n+              >\n+                Cancel\n+              </button>\n+            </div>\n+          ) : (\n+            <div className=\"title-header\">\n+              <h1 className=\"destination-title\">{destination.name}</h1>\n+              <button \n+                className=\"edit-button\"\n+                onClick={() => setIsEditingName(true)}\n+              >\n+                Edit\n+              </button>\n+            </div>\n+          )}\n+        </div>\n+        <div className=\"destination-card\">\n+          <div className=\"description-section\">\n+            <div className=\"section-header\">\n+              <h2>About this destination</h2>\n+              <button \n+                className=\"edit-button\"\n+                onClick={() => setIsEditingDetails(!isEditingDetails)}\n+              >\n+                {isEditingDetails ? 'Cancel' : 'Edit'}\n+              </button>\n+            </div>\n+            {isEditingDetails ? (\n+              <div className=\"edit-section\">\n+                <textarea\n+                  value={editedDetails}\n+                  onChange={(e) => setEditedDetails(e.target.value)}\n+                  rows=\"4\"\n+                />\n+                <button onClick={handleSaveDetails} className=\"save-button\">\n+                  Save Changes\n+                </button>\n+              </div>\n+            ) : (\n+              <p>{destination.details}</p>\n+            )}\n+          </div>\n+          \n+          <div className=\"items-section\">\n+            <div className=\"section-header\">\n+              <h2>Don't Forget These Items!</h2>\n+              <button \n+                className=\"edit-button\"\n+                onClick={() => setIsEditingItems(!isEditingItems)}\n+              >\n+                {isEditingItems ? 'Cancel' : 'Edit'}\n+              </button>\n+            </div>\n+            {isEditingItems ? (\n+              <div className=\"edit-section\">\n+                <textarea\n+                  value={editedItems}\n+                  onChange={(e) => setEditedItems(e.target.value)}\n+                  placeholder=\"Item 1, Item 2, Item 3\"\n+                  rows=\"4\"\n+                />\n+                <button onClick={handleSaveItems} className=\"save-button\">\n+                  Save Changes\n+                </button>\n+              </div>\n+            ) : (\n+              <div className=\"items-grid\">\n+                {destination.items.map((item, index) => (\n+                  <div key={index} className=\"item-card\">\n+                    <span className=\"item-text\">{item}</span>\n+                    <div className=\"checkbox\">\n+                      <input type=\"checkbox\" id={`item-${index}`} />\n+                      <label htmlFor={`item-${index}`}></label>\n+                    </div>\n+                  </div>\n+                ))}\n+              </div>\n+            )}\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+};\n+\n+export default DestinationDetails;\n\\ No newline at end of file\n"
                }
            ],
            "date": 1744011253124,
            "name": "Commit-0",
            "content": "import React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './DestinationDetails.css';\n\nconst DestinationDetails = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [destination, setDestination] = useState(location.state);\n  const [isEditingDetails, setIsEditingDetails] = useState(false);\n  const [isEditingItems, setIsEditingItems] = useState(false);\n  const [editedDetails, setEditedDetails] = useState(destination.details);\n  const [editedItems, setEditedItems] = useState(destination.items.join(', '));\n\n  if (!destination) {\n    return <h2>Error: No destination found</h2>;\n  }\n\n  const handleSaveDetails = async () => {\n    try {\n      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n        ...destination,\n        details: editedDetails\n      });\n      setDestination(response.data);\n      setIsEditingDetails(false);\n    } catch (error) {\n      console.error('Error updating details:', error);\n    }\n  };\n\n  const handleSaveItems = async () => {\n    try {\n      const itemsArray = editedItems.split(',').map(item => item.trim());\n      const response = await axios.put(`http://localhost:8000/api/destinations/${destination.intId}`, {\n        ...destination,\n        items: itemsArray\n      });\n      setDestination(response.data);\n      setIsEditingItems(false);\n    } catch (error) {\n      console.error('Error updating items:', error);\n    }\n  };\n\n  return (\n    <div className=\"details-container\">\n      <button onClick={() => navigate(-1)} className=\"back-button\">Back</button>\n      \n      <div className=\"details-content\">\n        <h1 className=\"destination-title\">{destination.name}</h1>\n        <div className=\"destination-card\">\n          <div className=\"description-section\">\n            <div className=\"section-header\">\n              <h2>About this destination</h2>\n              <button \n                className=\"edit-button\"\n                onClick={() => setIsEditingDetails(!isEditingDetails)}\n              >\n                {isEditingDetails ? 'Cancel' : 'Edit'}\n              </button>\n            </div>\n            {isEditingDetails ? (\n              <div className=\"edit-section\">\n                <textarea\n                  value={editedDetails}\n                  onChange={(e) => setEditedDetails(e.target.value)}\n                  rows=\"4\"\n                />\n                <button onClick={handleSaveDetails} className=\"save-button\">\n                  Save Changes\n                </button>\n              </div>\n            ) : (\n              <p>{destination.details}</p>\n            )}\n          </div>\n          \n          <div className=\"items-section\">\n            <div className=\"section-header\">\n              <h2>Don't Forget These Items!</h2>\n              <button \n                className=\"edit-button\"\n                onClick={() => setIsEditingItems(!isEditingItems)}\n              >\n                {isEditingItems ? 'Cancel' : 'Edit'}\n              </button>\n            </div>\n            {isEditingItems ? (\n              <div className=\"edit-section\">\n                <textarea\n                  value={editedItems}\n                  onChange={(e) => setEditedItems(e.target.value)}\n                  placeholder=\"Item 1, Item 2, Item 3\"\n                  rows=\"4\"\n                />\n                <button onClick={handleSaveItems} className=\"save-button\">\n                  Save Changes\n                </button>\n              </div>\n            ) : (\n              <div className=\"items-grid\">\n                {destination.items.map((item, index) => (\n                  <div key={index} className=\"item-card\">\n                    <span className=\"item-text\">{item}</span>\n                    <div className=\"checkbox\">\n                      <input type=\"checkbox\" id={`item-${index}`} />\n                      <label htmlFor={`item-${index}`}></label>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};"
        }
    ]
}