{
    "sourceFile": "frontend/src/pages/EventDetails.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1744029431747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1744029443885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,12 +19,12 @@\n         // Fetch associated destination details\n         const destinationResponse = await axios.get(\n           `http://localhost:8000/api/destinations/${eventResponse.data.destinationId}`\n         );\n-        setDestination(destinationResponse.data);        setLoading(false);\n-\n+        setDestination(destinationResponse.data);\n+        setLoading(false);\n       } catch (error) {\n-        console.error('Error fetching event details:', error);\n+        console.error('Error fetching event details:', error);\\\n       }\n     };\n \n     fetchEventDetails();\n"
                },
                {
                    "date": 1744029456636,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,76 @@\n+import React, { useState, useEffect } from 'react';\n+import { useParams, useNavigate } from 'react-router-dom';\n+import axios from 'axios';\n+import './EventDetails.css';\n+import Navbar from '../components/Navbar';\n+\n+const EventDetails = () => {\n+  const { id } = useParams();\n+  const navigate = useNavigate();\n+  const [event, setEvent] = useState(null);\n+  const [destination, setDestination] = useState(null);\n+  \n+\n+  useEffect(() => {\n+    const fetchEventDetails = async () => {\n+      try {\n+        const eventResponse = await axios.get(`http://localhost:8000/api/events/${id}`);\n+        setEvent(eventResponse.data);\n+        \n+        // Fetch associated destination details\n+        const destinationResponse = await axios.get(\n+          `http://localhost:8000/api/destinations/${eventResponse.data.destinationId}`\n+        );\n+        setDestination(destinationResponse.data);\n+        setLoading(false);\n+      } catch (error) {\n+        console.error('Error fetching event details:', error);\n+        setError('Failed to load event details');\n+        setLoading(false);\n+      }\n+    };\n+\n+    fetchEventDetails();\n+  }, [id]);\n+\n+  if (!event || !destination) {\n+    return <div className=\"loading\">Loading...</div>;\n+  }\n+\n+  return (\n+    <div className=\"event-details-container\">\n+      <Navbar />\n+      <button onClick={() => navigate(-1)} className=\"back-button\">Back</button>\n+      \n+      <div className=\"event-content\">\n+        <h1>{event.title}</h1>\n+        \n+        <div className=\"event-info\">\n+          <div className=\"info-section\">\n+            <h2>Trip Details</h2>\n+            <p><strong>Start Date:</strong> {new Date(event.start).toLocaleDateString()}</p>\n+            <p><strong>End Date:</strong> {new Date(event.end).toLocaleDateString()}</p>\n+          </div>\n+\n+          <div className=\"destination-section\">\n+            <h2>Destination Information</h2>\n+            <h3>{destination.name}</h3>\n+            <p>{destination.details}</p>\n+            \n+            <div className=\"packing-list\">\n+              <h3>Packing List</h3>\n+              {destination.items.map((item, index) => (\n+                <div key={index} className=\"packing-item\">\n+                  <input type=\"checkbox\" id={`item-${index}`} />\n+                  <label htmlFor={`item-${index}`}>{item}</label>\n+                </div>\n+              ))}\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+};\n+\n+export default EventDetails;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1744029533752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,10 +33,39 @@\n \n     fetchEventDetails();\n   }, [id]);\n \n+  if (loading) {\n+    return (\n+      <div className=\"event-details-container\">\n+        <Navbar />\n+        <div className=\"loading-spinner\">Loading...</div>\n+      </div>\n+    );\n+  }\n+\n+  if (error) {\n+    return (\n+      <div className=\"event-details-container\">\n+        <Navbar />\n+        <div className=\"error-message\">{error}</div>\n+        <button onClick={() => navigate('/calendar')} className=\"back-button\">\n+          Back to Calendar\n+        </button>\n+      </div>\n+    );\n+  }\n+\n   if (!event || !destination) {\n-    return <div className=\"loading\">Loading...</div>;\n+    return (\n+      <div className=\"event-details-container\">\n+        <Navbar />\n+        <div className=\"error-message\">Event not found</div>\n+        <button onClick={() => navigate('/calendar')} className=\"back-button\">\n+          Back to Calendar\n+        </button>\n+      </div>\n+    );\n   }\n \n   return (\n     <div className=\"event-details-container\">\n"
                },
                {
                    "date": 1744049428485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,117 @@\n+import React, { useState, useEffect } from 'react';\n+import { useParams, useNavigate } from 'react-router-dom';\n+import axios from 'axios';\n+import './EventDetails.css';\n+import Navbar from '../components/Navbar';\n+\n+const EventDetails = () => {\n+  const { id } = useParams();\n+  const navigate = useNavigate();\n+  const [event, setEvent] = useState(null);\n+  const [destination, setDestination] = useState(null);\n+  const [loading, setLoading] = useState(true);\n+  const [error, setError] = useState(null);\n+\n+  useEffect(() => {\n+    const fetchEventDetails = async () => {\n+      try {\n+        // First, get the event details\n+        const eventResponse = await axios.get(`http://localhost:8000/api/events/${id}`);\n+        setEvent(eventResponse.data);\n+        \n+        // Check if we have a valid destinationId\n+        if (eventResponse.data?.destinationId?._id) {\n+          // Use the _id from the populated destinationId\n+          const destinationResponse = await axios.get(\n+            `http://localhost:8000/api/destinations/${eventResponse.data.destinationId._id}`\n+          );\n+          setDestination(destinationResponse.data);\n+        } else if (eventResponse.data?.destinationId) {\n+          // Handle case where destinationId is just the ID string\n+          const destinationResponse = await axios.get(\n+            `http://localhost:8000/api/destinations/${eventResponse.data.destinationId}`\n+          );\n+          setDestination(destinationResponse.data);\n+        }\n+        setLoading(false);\n+      } catch (error) {\n+        console.error('Error fetching event details:', error);\n+        setError('Failed to load event details');\n+        setLoading(false);\n+      }\n+    };\n+  \n+    if (id) {\n+      fetchEventDetails();\n+    }\n+  }, [id]);\n+  if (loading) {\n+    return (\n+      <div className=\"event-details-container\">\n+        <Navbar />\n+        <div className=\"loading-spinner\">Loading...</div>\n+      </div>\n+    );\n+  }\n+\n+  if (error) {\n+    return (\n+      <div className=\"event-details-container\">\n+        <Navbar />\n+        <div className=\"error-message\">{error}</div>\n+        <button onClick={() => navigate('/calendar')} className=\"back-button\">\n+          Back to Calendar\n+        </button>\n+      </div>\n+    );\n+  }\n+\n+  if (!event || !destination) {\n+    return (\n+      <div className=\"event-details-container\">\n+        <Navbar />\n+        <div className=\"error-message\">Event not found</div>\n+        <button onClick={() => navigate('/calendar')} className=\"back-button\">\n+          Back to Calendar\n+        </button>\n+      </div>\n+    );\n+  }\n+\n+  return (\n+    <div className=\"event-details-container\">\n+      <Navbar />\n+      <button onClick={() => navigate(-1)} className=\"back-button\">Back</button>\n+      \n+      <div className=\"event-content\">\n+        <h1>{event.title}</h1>\n+        \n+        <div className=\"event-info\">\n+          <div className=\"info-section\">\n+            <h2>Trip Details</h2>\n+            <p><strong>Start Date:</strong> {new Date(event.start).toLocaleDateString()}</p>\n+            <p><strong>End Date:</strong> {new Date(event.end).toLocaleDateString()}</p>\n+          </div>\n+\n+          <div className=\"destination-section\">\n+            <h2>Destination Information</h2>\n+            <h3>{destination.name}</h3>\n+            <p>{destination.details}</p>\n+            \n+            <div className=\"packing-list\">\n+              <h3>Packing List</h3>\n+              {destination.items.map((item, index) => (\n+                <div key={index} className=\"packing-item\">\n+                  <input type=\"checkbox\" id={`item-${index}`} />\n+                  <label htmlFor={`item-${index}`}>{item}</label>\n+                </div>\n+              ))}\n+            </div>\n+          </div>\n+        </div>\n+      </div>\n+    </div>\n+  );\n+};\n+\n+export default EventDetails;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1744049655833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,26 +14,12 @@\n \n   useEffect(() => {\n     const fetchEventDetails = async () => {\n       try {\n-        // First, get the event details\n         const eventResponse = await axios.get(`http://localhost:8000/api/events/${id}`);\n         setEvent(eventResponse.data);\n-        \n-        // Check if we have a valid destinationId\n-        if (eventResponse.data?.destinationId?._id) {\n-          // Use the _id from the populated destinationId\n-          const destinationResponse = await axios.get(\n-            `http://localhost:8000/api/destinations/${eventResponse.data.destinationId._id}`\n-          );\n-          setDestination(destinationResponse.data);\n-        } else if (eventResponse.data?.destinationId) {\n-          // Handle case where destinationId is just the ID string\n-          const destinationResponse = await axios.get(\n-            `http://localhost:8000/api/destinations/${eventResponse.data.destinationId}`\n-          );\n-          setDestination(destinationResponse.data);\n-        }\n+        // Since the event response includes the populated destinationId, use it directly\n+        setDestination(eventResponse.data.destinationId);\n         setLoading(false);\n       } catch (error) {\n         console.error('Error fetching event details:', error);\n         setError('Failed to load event details');\n@@ -44,9 +30,9 @@\n     if (id) {\n       fetchEventDetails();\n     }\n   }, [id]);\n-  \n+\n   if (loading) {\n     return (\n       <div className=\"event-details-container\">\n         <Navbar />\n"
                },
                {
                    "date": 1744049673300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \n   useEffect(() => {\n     const fetchEventDetails = async () => {\n       try {\n-        con\n+        cons\n         const eventResponse = await axios.get(`http://localhost:8000/api/events/${id}`);\n         setEvent(eventResponse.data);\n         // Since the event response includes the populated destinationId, use it directly\n         setDestination(eventResponse.data.destinationId);\n"
                }
            ],
            "date": 1744029431747,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './EventDetails.css';\nimport Navbar from '../components/Navbar';\n\nconst EventDetails = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [event, setEvent] = useState(null);\n  const [destination, setDestination] = useState(null);\n\n  useEffect(() => {\n    const fetchEventDetails = async () => {\n      try {\n        const eventResponse = await axios.get(`http://localhost:8000/api/events/${id}`);\n        setEvent(eventResponse.data);\n        \n        // Fetch associated destination details\n        const destinationResponse = await axios.get(\n          `http://localhost:8000/api/destinations/${eventResponse.data.destinationId}`\n        );\n        setDestination(destinationResponse.data);        setLoading(false);\n\n      } catch (error) {\n        console.error('Error fetching event details:', error);\n      }\n    };\n\n    fetchEventDetails();\n  }, [id]);\n\n  if (!event || !destination) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"event-details-container\">\n      <Navbar />\n      <button onClick={() => navigate(-1)} className=\"back-button\">Back</button>\n      \n      <div className=\"event-content\">\n        <h1>{event.title}</h1>\n        \n        <div className=\"event-info\">\n          <div className=\"info-section\">\n            <h2>Trip Details</h2>\n            <p><strong>Start Date:</strong> {new Date(event.start).toLocaleDateString()}</p>\n            <p><strong>End Date:</strong> {new Date(event.end).toLocaleDateString()}</p>\n          </div>\n\n          <div className=\"destination-section\">\n            <h2>Destination Information</h2>\n            <h3>{destination.name}</h3>\n            <p>{destination.details}</p>\n            \n            <div className=\"packing-list\">\n              <h3>Packing List</h3>\n              {destination.items.map((item, index) => (\n                <div key={index} className=\"packing-item\">\n                  <input type=\"checkbox\" id={`item-${index}`} />\n                  <label htmlFor={`item-${index}`}>{item}</label>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EventDetails;"
        }
    ]
}